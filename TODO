= GIFLIB TODO list =

== Clean up the extensions mess ==

* Add a function-code argument to AddExtensionBlock()
* Remove MakeExtension() and its remaining uses in icon2gif
* Remove the Function member from the image structure

This will require a break in object-library compatibility.

Toshio wrote: The present Extension code is pretty hacky.  It looks
like giflib's ability to do Extension code was added on at a later
time and also was not implemented entirely in conformance with the
gif89a spec.  I've hacked it further to make it conform to the spec,
but it would benefit greatly from a complete rewrite.

== Security and quality ==

Make sure we set pointers that we don't fill to NULL.  (gifalloc.c seems
pretty clean.  But GifFile isn't allocated in gifalloc.c)

Toshio found a reported bug about libungif not handling interlaced images
correctly.  However, the latest library seems to work.  Need to figure out
what change fixed it and if it fixed it correctly or in a manner that is
apt to break later.

Make sure tmpnam is secure in gifinto.c (Use mkstemp if possible..)

# Make sure all malloc calls check their return value.
Still need to check dev2gif.c (Know there's problems there)
dgif_lib.c
egif_lib.c

Merge the windows changes from the last cvs version.  Contact Lennie Araki
about whether he is interested in maintaining the windows changes

Run the utils through indent

Toshio wrote: Make sure the backlog is really all merged and then
delete things from there.  Some is in my mailbox at home.  Others were
on the old CVS server.  I think most of the CVS backlog has been
merged but I've just started ot look at the stuff at home.

Start thinking about function naming and standardizing things.  The MakeXXX,
FreeXXX is a good step, but should things operate on GifFiles or the interior
data structures?  What about the functions in the rest of the library?
Should I be able to (MakeGifFileType(), FreeGifFileType(GifFile *) just like
MakeMapObject?)

Start thinking about namespacing all our code!  This will break so many things
in simple ways.  Need to deprecate so we can do this in 5.0

=======

Theoretical release 5.0

Move utilities into a separate package.

Now that we have sourceforge hosting, look into putting documentation and a
website onto sourceforge.  Don't know how much stuff I want to sync into this,
though, as I keep hoping gif's will take their last gasp and die.  (Why do we
need gif now that we have png and mng?)

======

Besides fixing bugs, what's really needed is for someone to work out how to
calculate a colormap for writing gifs from rgb sources.  Right now, an rgb
source that has only two colors (b/w) is being converted into an 8 bit gif....
Which is horrendously wasteful without compression.

Any volunteers?

